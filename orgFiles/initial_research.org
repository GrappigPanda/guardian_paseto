#+STARTUP: indent

* DONE Document all callbacks and determine their status in Paseto
CLOSED: [2018-09-12 Mi 22:39]
** build_claims/5 (module, resource, sub, claims, opts) [0/0]
*** Supported behavior
** create_token/3 (module, claims, opts) [0/0]
*** This is possible and would just need to be written.
** decode_token/3 (module, token, opts) [0/1]
*** This would be possible for public tokens, but not local.
*** TODO This would require a `peek` function
** exchange/5 (mod, old_token, from_type, to_type, opts) [0/1]
*** This functionality can immediately be done
*** TODO How are guardian keys stored/made available to modules?
** peek/2 (module, token) [0/1]
*** Only possible for public
*** TODO Write that `peek` function
** refresh/3 (module, old_token, opts) [0/0]
*** This isn't really possible given that tokens don't inherently have timers
** revoke/4 (mod, claims, token, opts) [0/0]
*** Again, revoke isn't really possible unless I want to harass a poor ets table
** token_id/0 [0/0]
*** Not really sure what this entails, can I just UUID it? It won't be consistent
** verify_claims/3 (mod, claims, opts) [0/0]
*** Default and supported behavior

* DONE build_claims/5 [1/1]
CLOSED: [2018-09-14 Fr 14:38]
** DONE Implement
CLOSED: [2018-09-14 Fr 14:38]
* DONE create_token/3 [1/1]
CLOSED: [2018-09-14 Fr 14:39]
** DONE Implement
CLOSED: [2018-09-14 Fr 14:39]
* DONE decode_token/3 [2/2]
CLOSED: [2018-09-14 Fr 15:37]
** DONE Determine what exactly `decode_token/3` does
CLOSED: [2018-09-12 Mi 22:54]
*** Short, initial expectation is returns the claims?
*** Seems to just return the decoded claims, only works for public
** DONE Implement `decode_token/3` [1/1]
CLOSED: [2018-09-14 Fr 15:37]
* TODO exchange/5 [1/2]
** DONE Determine how guardian keys are stored [2/2]
CLOSED: [2018-09-12 Mi 23:01]
*** DONE What type are they
CLOSED: [2018-09-12 Mi 22:59]
**** They can be whatever the user provides, but typically stringly for config
*** DONE How are they fetched?
CLOSED: [2018-09-12 Mi 23:01]
**** They are fetched either from the `opts` in the function args
**** OR, they're fetched from Guardian.Config.resolve_value
** TODO Implement exchange/5
* DONE peek/2 [3/3]
CLOSED: [2018-09-14 Fr 17:29]
** DONE Determine what exactly `peek/3` does
   CLOSED: [2018-09-12 Mi 22:50]
*** Short, initial expectation is returns the claims? Isn't this decode_token/3?
*** NOTE: This will return the claims as a map
** DONE Implement peek in `Paseto`
CLOSED: [2018-09-14 Fr 17:22]
** DONE Implement `peek/3` [1/1]
CLOSED: [2018-09-14 Fr 17:29]
*** DONE Grab claims map and return that _only_ on public keys
CLOSED: [2018-09-14 Fr 17:22]
* DONE refresh/3 [1/1]
CLOSED: [2018-09-14 Fr 15:44]
** DONE This can probably just return the same token--verify this.
CLOSED: [2018-09-14 Fr 15:44]
*** It's a little more involved, but we essentially just verify the token and then return a new token.
* DONE revoke/4 [2/2]
CLOSED: [2018-09-13 Do 21:47]
** DONE Determine what should be done here, this might not be possible?
CLOSED: [2018-09-12 Mi 22:53]
*** We should just return {:ok, claims()} here
** DONE Implement
CLOSED: [2018-09-13 Do 21:47]
* DONE token_id/0 [2/2]
CLOSED: [2018-09-13 Do 21:41]
** DONE Determine what exactly this should return [1/1]
CLOSED: [2018-09-12 Mi 23:02]
*** DONE Should it always return same thing for a given token?
CLOSED: [2018-09-12 Mi 23:02]
*** This can just be a UUID. The reference JWT impl just returns random UUID
** DONE Implement token_id/0
CLOSED: [2018-09-13 Do 21:41]
* DONE verify_claims/3 [1/1]
CLOSED: [2018-09-14 Fr 15:32]
** DONE Implement
CLOSED: [2018-09-14 Fr 15:32]
* TODO Questions [/]
** TODO Where are `allowed_algos` declared as specific config value?
** TODO How/when is peek used?
* TODO Add tests for getting values from config
* DONE Examples in the docs.
CLOSED: [2018-09-14 Fr 15:47]
** Marking as done not because it is, but because this isn't going to be used by others. They can just provide this as a config value and it'll be automatica.
* TODO Add @impl <module_name> if we can find the behavior
* TODO README changes [/]
** TODO Dependencies (erlang 20.1, libsodium-1.13 (?), and openssl v1.1)
** TODO How to use
** TODO (Potential) Say `peek` can't be used, dont know how this works.
